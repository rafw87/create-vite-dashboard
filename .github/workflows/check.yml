name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_call:
    inputs:
      package_version:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/previous-releases

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            template/package-lock.json
      - name: Prepare
        run: |
          git config --global user.email "example-user@example.com"
          git config --global user.name "Example User"
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build
        if: ${{ inputs.package_version == null }}
      - name: Pack to tgz
        run: npm pack --pack-destination=${{ runner.temp }}
        if: ${{ inputs.package_version == null }}
      - name: Uninstall package if present
        run: |
          npm uninstall -g @rafw87/create-vite-dashboard
      - name: Install globally from tgz
        run: npm install -g ${{ runner.temp }}/rafw87-create-vite-dashboard-*.tgz
        if: ${{ inputs.package_version == null }}
      - name: Install globally from NPM
        run: npm install -g @rafw87/create-vite-dashboard@${{ inputs.package_version }}
        if: ${{ inputs.package_version != null }}
      - name: Run create script from installed version
        run: npx tsx scripts/test-execute.ts ${{ runner.temp }}/generated-dashboard
      - name: Lint generated dashboard
        run: npm run lint -- --max-warnings 0
        working-directory: ${{ runner.temp }}/generated-dashboard
      - name: Build generated dashboard
        run: npm run build
        working-directory: ${{ runner.temp }}/generated-dashboard
      - name: Run prettier on generated dashboard
        run: npm run prettier:fix
        working-directory: ${{ runner.temp }}/generated-dashboard
      - name: Check if working tree is clean
        run: git diff --exit-code
        working-directory: ${{ runner.temp }}/generated-dashboard
